<UserControl x:Class="AGC.GUI.Views.CompareCalendarsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:common="clr-namespace:AGC.GUI.Common"
        xmlns:controls="clr-namespace:AGC.GUI.Controls"
        xmlns:ignore="http://www.ignore.com"          
        mc:Ignorable="d ignore"
        DataContext="{Binding ComparingCalendarsList, Source={StaticResource Locator}}" Height="400" Width="700">

    <Grid Margin="0,0,0,-72">



        <Label  Content="Email addresses :"  Margin="10,26,597,417" VerticalAlignment="Center"  Padding="5"
	     AutomationProperties.Name="Insert all emails separated by comma to compare them " Height="29" 
	    />
        <TextBox Height="35" Width="200" Margin="103,20,397,417" common:FocusExtension.IsFocused="{Binding IsDefaultControlsFocused}"  Style="{StaticResource InputText}"  Text="{ Binding ComparingCalendarsList, UpdateSourceTrigger=PropertyChanged  }" AutomationProperties.Name="type the email in this text box"/>
        <CheckBox Content="First email is primary" Style="{StaticResource SingleCheckBox}" IsChecked="{Binding PrimaryEmail}" Margin="311,29,238,425" Width="151"/>
        <ComboBox AutomationProperties.Name="ViewList" SelectionChanged="ListView_SelectionChanged" Style="{StaticResource DropDownMenu}" ItemsSource="{Binding ViewFormatList}" SelectedItem="{Binding SelectedViewFormat}" Margin="469,25,114,419" SelectedIndex="0"  />
        <Button Content="Find" Style="{StaticResource Button}" Command="{Binding GetComapringCalendarsCommand}" Margin="610,23,16,418" AutomationProperties.Name="" IsDefault="true"/>
        <ListView Height="151" Margin="10,67,10,0" VerticalAlignment="Top" ItemsSource="{Binding ComparingEvents }" AutomationProperties.Name="Events list, select event and press return to update or delete to delete event. Press Ctrol + R to refresh events list" common:FocusExtension.IsFocused="{Binding IsEventsListFocused}" SelectedItem="{Binding Path=SelectedEvent, Mode=TwoWay}" IsSynchronizedWithCurrentItem="True" SelectionChanged="ListView_SelectionChanged">


            <ListView.View>

                <GridView>
                    <GridViewColumn Header="Start" DisplayMemberBinding="{Binding FormatedStartDate}" />
                    <GridViewColumn Header="End" DisplayMemberBinding="{Binding FormatedEndDate}" />
                    <!--<GridViewColumn Header="Status" DisplayMemberBinding="{Binding Status}" />-->
                    <!-- <GridViewColumn Header="Title" DisplayMemberBinding="{Binding Title}" />-->
                    <GridViewColumn Header="Available" DisplayMemberBinding="{Binding Content}" />
                    <!-- <GridViewColumn Header="Location" DisplayMemberBinding="{Binding Location}" />-->

                </GridView>
            </ListView.View>
            <ListView.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding Path=DeleteEventCommand}" />
                <KeyBinding Key="Enter"   />
                <KeyBinding Key="Space"  Command="{Binding Path=UpdateEventCommand}" />
                <KeyBinding Key="C"  Command="{Binding Path=ConfirmEventCommand}" />
                <KeyBinding Key="T"  Command="{Binding Path=MakeTentativeEventCommand}" />
            </ListView.InputBindings>
        </ListView>
        <StackPanel Orientation="Vertical" Margin="0,223,0,-57" Visibility="{Binding ShowDefaultControls, Converter={StaticResource BoolToVis}}">
            <GroupBox Header="Select Views" Margin="10,0,10,0" VerticalAlignment="Top" Height="60">
                <StackPanel Orientation="Horizontal">
                    <Button Content="Today" Style="{StaticResource Button}" Command="{Binding GetTodayEventsCommand}" />
                    <Button Content="Tomorrow" Style="{StaticResource Button}" Command="{Binding GetTomorrowEventsCommand}"/>
                    <Button Content="This Week" Style="{StaticResource Button}" Command="{Binding GetThisWeekEventsCommand}"/>
                    <Button Content="Next Week" Style="{StaticResource Button}" Command="{Binding GetNextWeekEventsCommand}"/>
                    <Button Content="This Month" Style="{StaticResource Button}" Command="{Binding GetThisMonthEventsCommand}"/>
                    <Button Content="Next Month" Style="{StaticResource Button}" Command="{Binding GetNextMonthEventsCommand}"/>
                </StackPanel>
            </GroupBox>
            <StackPanel Orientation="Horizontal">
                <GroupBox Header="Select month period from current month" Margin="10,0,10,0" VerticalAlignment="Top" Height="60">
                    <StackPanel Orientation="Horizontal">
                        <controls:MonthPicker Month="{Binding PeriodEndMonth }" />
                        <ComboBox Name="PeriodType" Style="{StaticResource DropDownMenu}" ItemsSource="{Binding PeriodTypeList}" SelectedItem="{Binding SelectedPeriodType}" AutomationProperties.Name="Period Type"/>
                        <Button Content="Select Period" Style="{StaticResource Button}" Command="{Binding GetPeriodEventsCommand}"/>
                    </StackPanel>
                </GroupBox>
                <Button Content="Choose Date" Style="{StaticResource Button}" Command="{Binding ShowChooseDateEventsControlsCommand}" Margin="5,20,5,11" Click="ShowChooseDate" />
                <CheckBox Content="Enable Sort and Filter" Grid.Row="0" Style="{StaticResource SingleCheckBox}" IsChecked="{Binding EnableSortingAndFiltering}" Margin="5, 5, 5, 0" />
                <Button Content="Sorting and Filtering" Style="{StaticResource Button}" Command="{Binding SetSortingAndFilteringPreferencesCommand}" IsEnabled="{Binding EnableSortingAndFiltering}" Margin="5,20,5,11"/>
            </StackPanel>
            <Button Content="Log out" Style="{StaticResource Button}" Command="{Binding LogOutCommand}" Width="100" HorizontalAlignment="Right"/>


        </StackPanel>

        <StackPanel Name="ChooseDate" Orientation="Vertical" Margin="0,223,0,-57" Visibility="{Binding ShowChooseDateControls, Converter={StaticResource BoolToVis}}">
            <GroupBox Header="Choose Date" Height="90" VerticalAlignment="Top">
                <StackPanel Orientation="Horizontal">
                    <GroupBox Header="Start Date" Height="60">
                        <StackPanel Orientation="Horizontal">
                            <controls:DatePicker Date="{Binding StartDate}" Focusable="True" Focused="{Binding IsChooseDateControlsFocused}" />
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="End Date" Height="60" IsEnabled="{Binding EndDateSpecified}">
                        <StackPanel Orientation="Horizontal">
                            <controls:DatePicker Date="{Binding EndDate}" />
                        </StackPanel>
                    </GroupBox>

                </StackPanel>
            </GroupBox>
            <GroupBox Header="Search" VerticalAlignment="Top" Height="60">
                <StackPanel Orientation="Horizontal">
                    <CheckBox Content="Enable search" Style="{StaticResource SingleCheckBox}" IsChecked="{Binding EnableSearch}"/>
                    <TextBox Width="400" Margin="50,5,50,5" AutomationProperties.Name="Insert text to search" Text="{Binding TextToSearch}" IsEnabled="{Binding EnableSearch}"/>
                </StackPanel>
            </GroupBox>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="OK" Width="80" Style="{StaticResource Button}" Command="{Binding GetChooseDateEventsCommand}" Click="HideChooseDate"/>
                <Button Content="Cancel" Width="80" Style="{StaticResource Button}" Command="{Binding HideChooseDateEventsControlsCommand}" Click="HideChooseDate"/>
            </StackPanel>
        </StackPanel>

        <Grid.InputBindings>
            <KeyBinding Key="Escape"  Command="{Binding Path=HideChooseDateEventsControlsCommand}" />
            <KeyBinding Gesture="CTRL+R"  Command="{Binding Path=RefreshCommand}" />
        </Grid.InputBindings>
    </Grid>
</UserControl>